/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package location.views;

import location.dao.VoitureDAO;
import location.models.Voiture;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import javax.swing.AbstractCellEditor;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import location.dao.ClientDAO;
import location.dao.LocationDAO;
import location.dao.PenaliteDAO;
import location.dao.PersonnelDAO;
import location.dao.UtilisateurDAO;
import location.models.Client;
import location.models.Location;
import location.models.Penalite;
import location.models.Utilisateur;

/**
 *
 * @author onsai
 */
public class EspaceEmploye extends javax.swing.JFrame {

    /**
     * Creates new form EspaceEmploye
     */
    public EspaceEmploye(Utilisateur user) {
        initComponents();
        PanelTableVoitures.setVisible(false);
        PanelClients.setVisible(false);
        PanelLocations.setVisible(false);
        PanelPenalites.setVisible(false);
        
        initComboBoxes();
        initSliders();
        getAllVoitures();
        afficherPenalites();
        afficherLocations();
        afficherclients();
        
        




        
    }
    void afficherclients() {
    DefaultTableModel model = (DefaultTableModel) Tableclients.getModel();
    model.setRowCount(0);
    Tableclients.setRowHeight(60);
    // Met à jour les colonnes en ajoutant la colonne "Action"
    model.setColumnIdentifiers(new Object[] {
        "CIN", "Nom", "Prénom", "Téléphone", "Email", "Adresse",
        "Date de naissance", "Permis", "Date exp. permis", "Action"
    });

    ClientDAO dao = new ClientDAO();
    List<Client> liste = dao.getAllClients();

    for (Client c : liste) {
        Object[] ligne = {
            c.getCin(),
            c.getNom(),
            c.getPrenom(),
            c.getTelephone(),
            c.getEmail(),
            c.getAdresse(),
            c.getDateNaissance(),
            c.getPermisConduire(),
            c.getDateExpirationPermis(),
            "Actions" // Valeur affichée dans la cellule action
        };
        model.addRow(ligne);
    }

    // Maintenant, on définit le renderer et l'éditeur pour la colonne "Action"
    Tableclients.getColumn("Action").setCellRenderer(new ClientActionRenderer());
    Tableclients.getColumn("Action").setCellEditor(new ClientActionEditor(Tableclients));
}
    

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        PanelMain = new javax.swing.JPanel();
        btnVoitures = new javax.swing.JButton();
        btnClients = new javax.swing.JButton();
        btnLocations = new javax.swing.JButton();
        btnPenalites = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        PanelClients = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Tableclients = new javax.swing.JTable();
        refreshClientsBtn = new javax.swing.JButton();
        PanelLocations = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableLocations = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        PanelTableVoitures = new javax.swing.JPanel();
        ComboMarque = new javax.swing.JComboBox<>();
        ComboCarburant = new javax.swing.JComboBox<>();
        ComboAnnee = new javax.swing.JComboBox<>();
        btnRecherche = new javax.swing.JButton();
        ComboTransmission = new javax.swing.JComboBox<>();
        sliderPrixMin = new javax.swing.JSlider();
        sliderPrixMax = new javax.swing.JSlider();
        btnVoituresDisponibles = new javax.swing.JButton();
        btnVoituresLouees = new javax.swing.JButton();
        btnVoituresEnPanne = new javax.swing.JButton();
        btnVoituresEnMarche = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnAjouter = new javax.swing.JButton();
        labelPrixMin = new javax.swing.JLabel();
        labelPrixMax = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableVoiture = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        PanelPenalites = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablePenalites = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PanelMain.setMaximumSize(new java.awt.Dimension(1080, 1080));
        PanelMain.setPreferredSize(new java.awt.Dimension(1000, 700));

        btnVoitures.setIcon(new javax.swing.ImageIcon(getClass().getResource("/location/views/car.gif"))); // NOI18N
        btnVoitures.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoituresActionPerformed(evt);
            }
        });

        btnClients.setIcon(new javax.swing.ImageIcon(getClass().getResource("/location/views/client.gif"))); // NOI18N
        btnClients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClientsActionPerformed(evt);
            }
        });

        btnLocations.setIcon(new javax.swing.ImageIcon(getClass().getResource("/location/views/location.gif"))); // NOI18N
        btnLocations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocationsActionPerformed(evt);
            }
        });

        btnPenalites.setIcon(new javax.swing.ImageIcon(getClass().getResource("/location/views/penalite_1.gif"))); // NOI18N
        btnPenalites.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPenalitesActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Gérer voitures");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Consulter clients");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Consulter locations");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Consulter pénalités");

        javax.swing.GroupLayout PanelMainLayout = new javax.swing.GroupLayout(PanelMain);
        PanelMain.setLayout(PanelMainLayout);
        PanelMainLayout.setHorizontalGroup(
            PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMainLayout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLocations)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVoitures))
                .addGap(112, 112, 112)
                .addGroup(PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnClients)
                    .addComponent(btnPenalites)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1613, Short.MAX_VALUE))
        );
        PanelMainLayout.setVerticalGroup(
            PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMainLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVoitures)
                    .addComponent(btnClients))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLocations)
                    .addComponent(btnPenalites))
                .addGap(18, 18, 18)
                .addGroup(PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(132, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Accueil", PanelMain);

        Tableclients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "CIN", "Nom", "Prénom", "Tel", "Email", "Adresse", "Date de naissance", "Permis de conduire", "Date expiration permis", "Action"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(Tableclients);

        refreshClientsBtn.setText("Rafraichir");
        refreshClientsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshClientsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelClientsLayout = new javax.swing.GroupLayout(PanelClients);
        PanelClients.setLayout(PanelClientsLayout);
        PanelClientsLayout.setHorizontalGroup(
            PanelClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelClientsLayout.createSequentialGroup()
                .addGroup(PanelClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelClientsLayout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addComponent(refreshClientsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelClientsLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1395, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(296, Short.MAX_VALUE))
        );
        PanelClientsLayout.setVerticalGroup(
            PanelClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelClientsLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(refreshClientsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(168, Short.MAX_VALUE))
        );

        PanelLocations.setLayout(null);

        TableLocations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id_location", "CIN_client", "immatriculation", "date_debut", "date_fin", "date_retour", "mode_paiement", "statut"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TableLocations);

        PanelLocations.add(jScrollPane3);
        jScrollPane3.setBounds(50, 140, 609, 137);

        jButton3.setText("Rafraichir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        PanelLocations.add(jButton3);
        jButton3.setBounds(270, 40, 130, 40);

        ComboMarque.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ComboCarburant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ComboAnnee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnRecherche.setText("Rechercher");
        btnRecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRechercheActionPerformed(evt);
            }
        });

        ComboTransmission.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnVoituresDisponibles.setText("Voitures disponibles");
        btnVoituresDisponibles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoituresDisponiblesActionPerformed(evt);
            }
        });

        btnVoituresLouees.setText("Voitures louées");
        btnVoituresLouees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoituresLoueesActionPerformed(evt);
            }
        });

        btnVoituresEnPanne.setText("Voitures en panne");
        btnVoituresEnPanne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoituresEnPanneActionPerformed(evt);
            }
        });

        btnVoituresEnMarche.setText("Voitures en marche");
        btnVoituresEnMarche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoituresEnMarcheActionPerformed(evt);
            }
        });

        jLabel5.setText("Prix Min :");

        jLabel6.setText("Prix Max :");

        btnAjouter.setText("Ajouter");
        btnAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjouterActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        TableVoiture.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Immatriculation", "Marque", "Modèle", "Année", "Etat", "Disponibilité", "Prix(TND)", "Carburant", "Transmission", "Date début assurance", "Date fin assurance", "Id assurance", "Action"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableVoiture.setRowHeight(40);
        jScrollPane1.setViewportView(TableVoiture);

        jButton2.setText("Rafraichir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelTableVoituresLayout = new javax.swing.GroupLayout(PanelTableVoitures);
        PanelTableVoitures.setLayout(PanelTableVoituresLayout);
        PanelTableVoituresLayout.setHorizontalGroup(
            PanelTableVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTableVoituresLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(ComboMarque, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(ComboAnnee, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(ComboCarburant, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(ComboTransmission, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PanelTableVoituresLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(sliderPrixMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89)
                .addComponent(jLabel6)
                .addGap(12, 12, 12)
                .addComponent(sliderPrixMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(btnVoituresEnMarche, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PanelTableVoituresLayout.createSequentialGroup()
                .addGap(298, 298, 298)
                .addComponent(btnRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(301, 301, 301)
                .addComponent(btnVoituresLouees, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PanelTableVoituresLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1400, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PanelTableVoituresLayout.createSequentialGroup()
                .addGroup(PanelTableVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelTableVoituresLayout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(labelPrixMin, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelTableVoituresLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(btnAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(212, 212, 212)
                .addGroup(PanelTableVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelTableVoituresLayout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121)
                        .addComponent(btnVoituresDisponibles, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelTableVoituresLayout.createSequentialGroup()
                        .addComponent(labelPrixMax, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106)
                        .addComponent(btnVoituresEnPanne, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        PanelTableVoituresLayout.setVerticalGroup(
            PanelTableVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTableVoituresLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(PanelTableVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboMarque, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboAnnee, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboCarburant, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboTransmission, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73)
                .addGroup(PanelTableVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelTableVoituresLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelTableVoituresLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(sliderPrixMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelTableVoituresLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelTableVoituresLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(sliderPrixMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnVoituresEnMarche, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(PanelTableVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelPrixMin, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelTableVoituresLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(labelPrixMax, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelTableVoituresLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(btnVoituresEnPanne, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(PanelTableVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVoituresLouees, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(PanelTableVoituresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PanelTableVoituresLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(btnAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnVoituresDisponibles, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        TablePenalites.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id_penalite", "id_location", "mode_paiement", "etat_paiement"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TablePenalites);

        jButton1.setText("Rafraichir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelPenalitesLayout = new javax.swing.GroupLayout(PanelPenalites);
        PanelPenalites.setLayout(PanelPenalitesLayout);
        PanelPenalitesLayout.setHorizontalGroup(
            PanelPenalitesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPenalitesLayout.createSequentialGroup()
                .addGroup(PanelPenalitesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPenalitesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelPenalitesLayout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(909, Short.MAX_VALUE))
        );
        PanelPenalitesLayout.setVerticalGroup(
            PanelPenalitesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPenalitesLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(531, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 2094, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(209, 209, 209)
                .addComponent(PanelClients, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(308, 308, 308)
                .addComponent(PanelTableVoitures, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(299, 299, 299)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelLocations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PanelPenalites, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 2798, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(1805, 1805, 1805)
                .addComponent(PanelClients, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(986, 986, 986)
                .addComponent(PanelTableVoitures, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(805, 805, 805)
                .addComponent(PanelLocations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(PanelPenalites, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    //Initialiser ComboBoxes
    private void initComboBoxes() {
    VoitureDAO voitureDAO = new VoitureDAO();

    // Initialiser le ComboBox des marques
    ComboMarque.removeAllItems();
    ComboMarque.addItem("Marque");  // Ajoute un élément statique pour l'intitulé
    List<String> marques = voitureDAO.getMarques();  // Récupère les marques de la base
    for (String marque : marques) {
        if (marque != null && !marque.trim().isEmpty()) {  // Vérifie que la marque n'est pas vide
            ComboMarque.addItem(marque);  // Ajoute chaque marque dans le ComboBox
        }
    }

    // Initialiser le ComboBox des années
    ComboAnnee.removeAllItems();
    ComboAnnee.addItem("Année");  // Ajoute un élément statique pour l'intitulé
    List<String> annees = voitureDAO.getAnnees();  // Récupère les années de la base
    for (String annee : annees) {
        if (annee != null && !annee.trim().isEmpty()) {  // Vérifie que l'année n'est pas vide
            ComboAnnee.addItem(annee);  // Ajoute chaque année dans le ComboBox
        }
    }

    // Initialiser le ComboBox des carburants
    ComboCarburant.removeAllItems();
    ComboCarburant.addItem("Carburant");
    ComboCarburant.addItem("essence");
    ComboCarburant.addItem("diesel");
    ComboCarburant.addItem("electrique");

    // Initialiser le ComboBox des transmissions
    ComboTransmission.removeAllItems();
    ComboTransmission.addItem("Transmission");
    ComboTransmission.addItem("automatique");
    ComboTransmission.addItem("manuel");
}
    
    //Initialiser Sliders
private void initSliders() {
    VoitureDAO voitureDAO = new VoitureDAO();
    List<Double> prixList = voitureDAO.getPrixJourList(); // méthode qui retourne tous les prix_jour

    if (prixList.isEmpty()) return;

    // Extraire partie entière des bornes min et max
    double min = prixList.stream().min(Double::compareTo).get();
    double max = prixList.stream().max(Double::compareTo).get();

    int minVal = (int) Math.floor(min);
    int maxVal = (int) Math.ceil(max);

    // Calcul du pas : moyenne des écarts
    List<Double> sorted = prixList.stream().sorted().toList();
    double sumGaps = 0;
    for (int i = 1; i < sorted.size(); i++) {
        sumGaps += sorted.get(i) - sorted.get(i - 1);
    }
    int step = sorted.size() > 1 ? Math.max(1, (int) (sumGaps / (sorted.size() - 1))) : 1;

    sliderPrixMin.setMinimum(minVal);
    sliderPrixMin.setMaximum(maxVal);
    sliderPrixMin.setValue(minVal);
    sliderPrixMin.setMajorTickSpacing(step);
    sliderPrixMin.setPaintTicks(true);

    sliderPrixMax.setMinimum(minVal);
    sliderPrixMax.setMaximum(maxVal);
    sliderPrixMax.setValue(maxVal);
    sliderPrixMax.setMajorTickSpacing(step);
    sliderPrixMax.setPaintTicks(true);

    labelPrixMin.setText("Prix Min : " + sliderPrixMin.getValue() + " TND");
    labelPrixMax.setText("Prix Max : " + sliderPrixMax.getValue() + " TND");

    sliderPrixMin.addChangeListener(e -> {
        int val = sliderPrixMin.getValue();
        labelPrixMin.setText("Prix Min : " + val + " TND");
    });

    sliderPrixMax.addChangeListener(e -> {
        int val = sliderPrixMax.getValue();
        labelPrixMax.setText("Prix Max : " + val + " TND");
    });
    
}

public void ouvrirFicheModification(String immat) {
    VoitureDAO voitureDAO = new VoitureDAO();
    Voiture voiture = voitureDAO.trouverParImmatriculation(immat); 

    if (voiture != null) {
        FicheModifVoiture fiche = new FicheModifVoiture();

        // Charger les IDs d'assurance dans le combo box
        fiche.chargerIdAssurances();

        // Remplir les champs avec les données de la voiture
        fiche.remplirChamps(voiture); // Tu dois créer cette méthode dans FicheModifVoiture
        fiche.setVoitureOrigine(voiture);
        fiche.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(this, "Voiture non trouvée avec l'immatriculation : " + immat);
    }
}


// ButtonRenderer: Displays the "Modifier" button in the table cell
class ButtonRenderer extends JButton implements TableCellRenderer {
    public ButtonRenderer() {
        setText("Modifier");
    }

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,
                                                   boolean hasFocus, int row, int column) {
        return this;
    }
}

// ButtonEditor: Handles the button click and opens the modification panel
class ButtonEditor extends DefaultCellEditor {
    protected JButton button;
    private boolean isPushed;
    private JTable table;
    private EspaceEmploye parent;

    public ButtonEditor(JCheckBox checkBox, JTable table, EspaceEmploye parent) {
        super(checkBox);
        this.table = table;
        this.parent = parent;
        button = new JButton("Modifier");
        button.setOpaque(true);
        button.addActionListener(e -> fireEditingStopped());
    }

    @Override
    public Component getTableCellEditorComponent(JTable table, Object value,
                                                 boolean isSelected, int row, int column) {
        isPushed = true;
        return button;
    }

    @Override
    public Object getCellEditorValue() {
        if (isPushed) {
            int selectedRow = table.getSelectedRow();
            String immat = table.getValueAt(selectedRow, 0).toString();
            parent.ouvrirFicheModification(immat); // Appelle depuis le parent
        }
        isPushed = false;
        return "Modifier";
    }
    }

private void updateTableVoiture(List<Voiture> voitures) {
    DefaultTableModel model = new DefaultTableModel();
    model.setColumnIdentifiers(new Object[] {
        "Immatriculation", "Marque", "Modèle", "Année", "État", "Disponibilité",
        "Prix", "Carburant", "Transmission", "Date début assu.", "Date exp. assu.", "ID Assurance", "Action"
    });

    for (Voiture v : voitures) {
        model.addRow(new Object[] {
            v.getImmatriculation(),
            v.getMarque(),
            v.getModele(),
            v.getAnnee(),
            v.getEtat(),
            v.getDisponibilite(),
            v.getPrixJour(),
            v.getCarburant(),
            v.getTransmission(),
            v.getDateDebutAssurance(),
            v.getDateExpirationAssurance(),
            v.getIdAssurance(),
            "Modifier"
        });
    }

    TableVoiture.setModel(model);

    // Ajout bouton dans la colonne "Action"
    TableVoiture.getColumn("Action").setCellRenderer(new ButtonRenderer());
    TableVoiture.getColumn("Action").setCellEditor(new ButtonEditor(new JCheckBox(), TableVoiture, this));

}




private void rechercherVoitures() {
    String marque = ComboMarque.getSelectedItem().toString();
    String annee = ComboAnnee.getSelectedItem().toString();
    String carburant = ComboCarburant.getSelectedItem().toString();
    String transmission = ComboTransmission.getSelectedItem().toString();

    int prixMin = sliderPrixMin.getValue();
    int prixMax = sliderPrixMax.getValue();

    // Si valeur = texte par défaut → on ignore dans le filtre
    if (marque.equals("Marque")) marque = null;
    if (annee.equals("Année")) annee = null;
    if (carburant.equals("Carburant")) carburant = null;
    if (transmission.equals("Transmission")) transmission = null;

    VoitureDAO voitureDAO = new VoitureDAO();
    List<Voiture> resultats = voitureDAO.rechercherVoituresDAO(
        marque, annee, carburant, transmission, prixMin, prixMax
    );

    // Met à jour la JTable ici avec les résultats
    updateTableVoiture(resultats);
}
private void afficherPenalites() {
    DefaultTableModel model = (DefaultTableModel) TablePenalites.getModel();
    model.setRowCount(0); // vide le tableau avant d'ajouter les nouvelles données

    PenaliteDAO dao = new PenaliteDAO();
    List<Penalite> liste = dao.getAllPenalites();

    for (Penalite p : liste) {
        Object[] ligne = {
            p.getIdPenalite(),
            p.getIdLocation(),
            p.getModePaiement(),
            p.getEtatPaiement()
        };
        model.addRow(ligne);
    }
}

private void getAllVoitures() {
    VoitureDAO dao = new VoitureDAO();
    List<Voiture> toutes = dao.listerTout();
    updateTableVoiture(toutes);
}


void afficherLocations() {
    DefaultTableModel model = (DefaultTableModel) TableLocations.getModel();
    model.setRowCount(0); // vider les lignes avant d'ajouter

    LocationDAO dao = new LocationDAO();
    List<Location> liste = dao.getAllLocations();

    for (Location l : liste) {
        Object[] ligne = {
            l.getId(),
            l.getClientCin(),
            l.getVoitureId(),
            l.getDateDebut() ,
            l.getDateFin() ,
            l.getDateRetour(),
            l.getModePaiement(),
            l.getStatut()
        };
        model.addRow(ligne);
    }
}
// Renderer pour les boutons dans la colonne "Action" clients
class ClientActionRenderer extends JPanel implements TableCellRenderer {
    public ClientActionRenderer() {
        setLayout(new FlowLayout(FlowLayout.CENTER, 5, 0));
        JButton btnPenalites = new JButton("Pénalités");
        JButton btnLocations = new JButton("Locations");
        // On peut désactiver les boutons pour le rendu, ou pas
        btnPenalites.setEnabled(false);
        btnLocations.setEnabled(false);
        add(btnPenalites);
        add(btnLocations);
    }

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value,
                                                   boolean isSelected, boolean hasFocus, int row, int column) {
        return this;
    }
}

// Editor pour gérer le clic sur les boutons clients
class ClientActionEditor extends AbstractCellEditor implements TableCellEditor {
    private JPanel panel;
    private JButton btnPenalites;
    private JButton btnLocations;
    private String cin; // on suppose que le CIN est en colonne 0
    private JTable table;

    public ClientActionEditor(JTable table) {
        this.table = table;
        panel = new JPanel(new FlowLayout(FlowLayout.CENTER, 5, 0));
        btnPenalites = new JButton("Pénalités");
        btnLocations = new JButton("Locations");

        btnPenalites.addActionListener(e -> {
            if (cin != null) {
                // Ouvre la fenêtre d'historique pénalités avec le CIN client
                new FicheHistoriquePenalites(cin).setVisible(true);
            }
            fireEditingStopped();
        });

        btnLocations.addActionListener(e -> {
            if (cin != null) {
                // Ouvre la fenêtre d'historique locations avec le CIN client
                new FicheHistoriqueLocations(cin).setVisible(true);
            }
            fireEditingStopped();
        });

        panel.add(btnPenalites);
        panel.add(btnLocations);
    }

    @Override
    public Component getTableCellEditorComponent(JTable table, Object value,
                                                 boolean isSelected, int row, int column) {
        cin = table.getValueAt(row, 0).toString(); // Récupère le CIN en colonne 0
        return panel;
    }

    @Override
    public Object getCellEditorValue() {
        return null;
    }
}


    private void btnVoituresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoituresActionPerformed
    boolean tabExiste = false;
    for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
        if (jTabbedPane1.getTitleAt(i).equals("Gérer voitures")) {
            tabExiste = true;
            jTabbedPane1.setSelectedIndex(i); // Aller à l'onglet si déjà ajouté
            break;
        }
    }

    // Si l'onglet n'existe pas, on l'ajoute
    if (!tabExiste) {
        jTabbedPane1.addTab("Gérer voitures", PanelTableVoitures);
        jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount() - 1);
    
}


    }//GEN-LAST:event_btnVoituresActionPerformed

    private void btnClientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClientsActionPerformed
        // Vérifie si l'onglet existe déjà
        boolean tabExiste = false;
        for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
            if (jTabbedPane1.getTitleAt(i).equals("Consulter clients")) {
                tabExiste = true;
                jTabbedPane1.setSelectedIndex(i); // Aller à l'onglet si déjà ajouté
                break;
            }
        }

// Si l'onglet n'existe pas, on l'ajoute
        if (!tabExiste) {
            jTabbedPane1.addTab("Consulter clients", PanelClients);
            jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount() - 1);
        }

    }//GEN-LAST:event_btnClientsActionPerformed

    private void btnLocationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocationsActionPerformed
        boolean tabExiste = false;
        for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
        if (jTabbedPane1.getTitleAt(i).equals("Consulter locations")) {
            tabExiste = true;
            jTabbedPane1.setSelectedIndex(i);
            break;
            
        }
        }
        if (!tabExiste) {
            jTabbedPane1.addTab("Consulter locations", PanelLocations);
            jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount() - 1);
           
        }
       
    }//GEN-LAST:event_btnLocationsActionPerformed

    private void btnPenalitesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPenalitesActionPerformed
        boolean tabExiste = false;
        for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
            if (jTabbedPane1.getTitleAt(i).equals("Consulter pénalités")) {
                tabExiste = true;
                jTabbedPane1.setSelectedIndex(i);
                break;
            }
        }

        if (!tabExiste) {
            jTabbedPane1.addTab("Consulter pénalités", PanelPenalites);
            jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount() - 1);
        }
    }//GEN-LAST:event_btnPenalitesActionPerformed

    private void btnRechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRechercheActionPerformed
        rechercherVoitures();
    }//GEN-LAST:event_btnRechercheActionPerformed

    private void btnVoituresLoueesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoituresLoueesActionPerformed
        List<Voiture> louees = new VoitureDAO().getVoituresParDisponibilite("louee");
        updateTableVoiture(louees);
    }//GEN-LAST:event_btnVoituresLoueesActionPerformed

    private void btnVoituresEnMarcheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoituresEnMarcheActionPerformed
        List<Voiture> enMarche = new VoitureDAO().getVoituresParEtat("en_marche");
        updateTableVoiture(enMarche);
    }//GEN-LAST:event_btnVoituresEnMarcheActionPerformed

    private void btnVoituresEnPanneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoituresEnPanneActionPerformed
        List<Voiture> enPanne = new VoitureDAO().getVoituresParEtat("en_panne");
        updateTableVoiture(enPanne);
    }//GEN-LAST:event_btnVoituresEnPanneActionPerformed

    private void btnVoituresDisponiblesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoituresDisponiblesActionPerformed
        List<Voiture> disponibles = new VoitureDAO().getVoituresParDisponibilite("disponible");
        updateTableVoiture(disponibles);
    }//GEN-LAST:event_btnVoituresDisponiblesActionPerformed

    private void btnAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjouterActionPerformed
        FicheAjoutVoiture f = new FicheAjoutVoiture();  // Crée une instance
    f.setLocationRelativeTo(null);                  // Centre la fenêtre
    f.setVisible(true);  
    }//GEN-LAST:event_btnAjouterActionPerformed

    private void refreshClientsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshClientsBtnActionPerformed
        afficherclients();
    }//GEN-LAST:event_refreshClientsBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        afficherPenalites();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        getAllVoitures();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        afficherLocations();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EspaceEmploye.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EspaceEmploye.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EspaceEmploye.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EspaceEmploye.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
                var emp = new UtilisateurDAO().listerTous().stream().filter(l -> new PersonnelDAO().estPersonnel(l.getCin())).findFirst().get();
            new EspaceEmploye(emp).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboAnnee;
    private javax.swing.JComboBox<String> ComboCarburant;
    private javax.swing.JComboBox<String> ComboMarque;
    private javax.swing.JComboBox<String> ComboTransmission;
    private javax.swing.JPanel PanelClients;
    private javax.swing.JPanel PanelLocations;
    private javax.swing.JPanel PanelMain;
    private javax.swing.JPanel PanelPenalites;
    private javax.swing.JPanel PanelTableVoitures;
    private javax.swing.JTable TableLocations;
    private javax.swing.JTable TablePenalites;
    private javax.swing.JTable TableVoiture;
    private javax.swing.JTable Tableclients;
    private javax.swing.JButton btnAjouter;
    private javax.swing.JButton btnClients;
    private javax.swing.JButton btnLocations;
    private javax.swing.JButton btnPenalites;
    private javax.swing.JButton btnRecherche;
    private javax.swing.JButton btnVoitures;
    private javax.swing.JButton btnVoituresDisponibles;
    private javax.swing.JButton btnVoituresEnMarche;
    private javax.swing.JButton btnVoituresEnPanne;
    private javax.swing.JButton btnVoituresLouees;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelPrixMax;
    private javax.swing.JLabel labelPrixMin;
    private javax.swing.JButton refreshClientsBtn;
    private javax.swing.JSlider sliderPrixMax;
    private javax.swing.JSlider sliderPrixMin;
    // End of variables declaration//GEN-END:variables
}
