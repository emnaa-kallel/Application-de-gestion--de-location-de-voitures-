/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package location.views;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.JOptionPane;
import location.utils.DatabaseConnection;

/**
 *
 * @author emnak
 */
public class validerlocation extends javax.swing.JFrame {

  
    private String datef;
    private String idloc;
    private String imm;
    public validerlocation() {
        initComponents();
    }
    public validerlocation(String datef,String idloc,String imm) {
        initComponents();
        this.datef = datef;
        this.idloc = idloc;
        this.imm = imm;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 102));
        jLabel1.setText("Location");

        jLabel2.setText("Date de retour :");

        jButton1.setText("Valider");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Retour");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try (Connection conn = DatabaseConnection.getConnection()) {
    // Démarrer une transaction
    conn.setAutoCommit(false);
    
    
     
    // Récupération de la date depuis le composant (ex: JDateChooser)
Date retourDate = dateretour.getDate();
if (retourDate == null) {
    JOptionPane.showMessageDialog(this, "Veuillez sélectionner une date de retour !");
    return;
}
LocalDate retour = retourDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
System.out.println("Date de fin reçue : " + this.datef );  // ou this.datef si dans une méthode d’instance

DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
String dateOnly = datef.split(" ")[0]; // ou .substring(0, 10)
LocalDate fin = LocalDate.parse(dateOnly, DateTimeFormatter.ofPattern("yyyy-MM-dd"));

// Vérification que datef est bien fournie
if (this.datef == null || this.datef.isEmpty()) {
    JOptionPane.showMessageDialog(this, "La date de fin est vide !");
    return;
}




// Vérification et insertion de la pénalité si nécessaire


if (retour.isAfter(fin)) {
    String sqlPenalite = "INSERT INTO Penalite (id_penalite, id_location, mode_paiement, etat_paiement) " +
                         "VALUES (penalite_seq.NEXTVAL, ?, ?, ?)";
    try (PreparedStatement psPenalite = conn.prepareStatement(sqlPenalite)) {
        psPenalite.setInt(1, Integer.parseInt(idloc));
        psPenalite.setString(2, "carte bancaire");
        psPenalite.setString(3, "en_attente");
        psPenalite.executeUpdate();
    } catch (SQLException e) {
        e.printStackTrace();
    }
}

// Mise à jour de la location
String sql1 = "UPDATE Location SET statut = 'terminee' WHERE id_location = ?";
try (PreparedStatement ps1 = conn.prepareStatement(sql1)) {
    ps1.setInt(1, Integer.parseInt(idloc));
    ps1.executeUpdate();
}

// Mise à jour de la voiture
String sql2 = "UPDATE Voiture SET disponibilite = 'disponible' WHERE immatriculation = ?";
try (PreparedStatement ps2 = conn.prepareStatement(sql2)) {
    ps2.setString(1, imm);
    ps2.executeUpdate();
}

// Commit des changements
conn.commit();

// Message de confirmation
JOptionPane.showMessageDialog(this, "Validation terminée ,veullez verifier si vous avez des pénalités !");
this.dispose(); // Ferme la fenêtre

} catch (Exception e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Erreur : " + e.getMessage());
}

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(validerlocation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(validerlocation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(validerlocation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(validerlocation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new validerlocation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
