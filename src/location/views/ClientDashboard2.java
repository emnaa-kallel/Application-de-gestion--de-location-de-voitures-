/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package location.views;

import javax.swing.JOptionPane;
import location.models.Utilisateur;
import location.dao.UtilisateurDAO;
import location.utils.DatabaseConnection;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import location.dao.VoitureDAO;
import location.models.Voiture;
import java.awt.Component;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;
import javax.swing.JButton;
import javax.swing.table.TableCellRenderer;

import javax.swing.JCheckBox;
import location.dao.ClientDAO;
import location.dao.LocationDAO;
import location.dao.PenaliteDAO;
import location.dao.ReservationDAO;
import location.models.Client;
import location.models.Location;
import location.models.Penalite;

/**
 *
 * @author sahar
 */
public class ClientDashboard2 extends javax.swing.JFrame {

    /**
     * Creates new form loginframe
     * @param user
     */
     //private Pena penaliteDAO;
    private VoitureDAO voitureDAO;
    private LocationDAO locationDAO;
    public Utilisateur user;
    
    private PenaliteDAO penaliteDAO;
    
    
    private DefaultTableModel model;
    private DefaultTableModel model2;
    private ReservationDAO ReservationDAO;
   public ClientDashboard2(Utilisateur user) {
    initComponents();
    // Dans la méthode initComponents()
  
    rafraichir(user);
    // Charger l'image
        ImageIcon originalIcon = new ImageIcon("/location/views/keys.gif");

        // Redimensionner l'image à 24x24 (par exemple)
        //var image = ((ImageIcon)(jButton2.getIcon())).getImage(); // get the Image from the Icon
        //Image newImg = image.getScaledInstance(24, 24,  java.awt.Image.SCALE_SMOOTH);
        //ImageIcon resizedIcon = new ImageIcon(newImg);

        // Ajouter à un bouton
        //jButton2.setIcon(resizedIcon);
        jTabbedPane1.removeTabAt(1);
        jTabbedPane1.removeTabAt(1);
        jTabbedPane1.removeTabAt(1);
        jTabbedPane1.removeTabAt(1);
        //jTabbedPane1.addTab("acceuil", jPanel2);
        
}

   public void chargerVoituresDisponibles() {
    model.setRowCount(0); // Vider la table

    List<Voiture> voitures = voitureDAO.listerTout();
   for (Voiture v : voitures) {
    String action = v.getDisponibilite().equalsIgnoreCase("Disponible") ? "Réserver" : null;
//
    model.addRow(new Object[]{
        v.getImmatriculation(),
        v.getMarque(),
        v.getModele(),
        v.getAnnee(),
        v.getEtat(),
        v.getDisponibilite(),
        v.getPrixJour() + " Dinars",
        v.getCarburant(),
        v.getTransmission(),
        action  // 10ème colonne : bouton ou rien
    });
}

}
   
       private void chargerVoituresReserves(Utilisateur user) {
    model2.setRowCount(0); // Vider la table

    
    
    var locations = locationDAO.listerParClient(user.getCin());
   for (Location v : locations) {
    //String action = v.getStatut().equalsIgnoreCase("en_cours") ? "Annuler" : (v.getStatut().equalsIgnoreCase("terminee") ? null: "Payer");
//    String[] colonnes2 = { "ID", "Immatriculation", "Marque", "Modèle", "Prix jour ", "Carburant", "Date début", "Date fin", "Date retour", "Statut", "Action"};

    model2.addRow(new Object[]{
        v.getId(),
        v.getVoiture().getImmatriculation(),
        v.getVoiture().getMarque(),
        v.getVoiture().getModele(),
        v.getVoiture().getPrixJour(),
        v.getVoiture().getCarburant(),
        v.getDateDebut(),
        v.getDateFin(),
        v.getDateRetour(),
        v.getStatut()//,
        //action  // 10ème colonne : bouton ou rien
    });
}

}
                                            
                                                                

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // Initialisation des composants
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        bDeconnexion = new javax.swing.JButton();
        bretour = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        brechercher = new javax.swing.JButton();
        baffichertoutesvoitures = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        bexit = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        raffraichirPenalite = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtNom = new javax.swing.JTextField();
        txtPrenom = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtTel = new javax.swing.JTextField();
        txtAdress = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtAncienMotDePasse = new javax.swing.JTextField();
        txtNouveauMotDePasse = new javax.swing.JTextField();
        txtConfirmerMotDePasse = new javax.swing.JTextField();
        jinforma = new javax.swing.JButton();
        jmotdepasse = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel8.setText("BIENVENUE");

        bDeconnexion.setText("Deconnexion");
        bDeconnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeconnexionActionPerformed(evt);
            }
        });

        bretour.setText("Retour");
        bretour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bretourActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel5.setText("ESPACE CLIENT");

        jButton3.setIcon(new javax.swing.ImageIcon("C:\\Users\\emnak\\assembler_location_voiture\\src\\location\\views\\location.gif")); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon("C:\\Users\\emnak\\assembler_location_voiture\\src\\location\\views\\editcompte.gif")); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel16.setText("Réserver une voiture");

        jLabel17.setText("Mes locations");

        jLabel18.setText("Mes penalités");

        jLabel19.setText("Modifier mon compte");

        jButton6.setIcon(new javax.swing.ImageIcon("C:\\Users\\emnak\\assembler_location_voiture\\src\\location\\views\\keys-ezgif.com-resize.gif")); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\emnak\\assembler_location_voiture\\src\\location\\views\\penalite.gif")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel20.setText("mes pénalités");

        jLabel21.setText("Modifier mon compte");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel16))
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 72, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(94, 94, 94)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel19))
                                .addGap(163, 163, 163))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(142, 142, 142))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(163, 163, 163))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jButton5))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addGap(49, 49, 49)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton5))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addGap(193, 193, 193)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("acceuil", jPanel2);

        jLabel1.setText("Voitures Disponibles");

        jLabel2.setText("Chercher une voiture");

        jLabel3.setText("Marque/Modéle");

        brechercher.setText("Rechercher");
        brechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brechercherActionPerformed(evt);
            }
        });

        baffichertoutesvoitures.setText("Afficher toutes les voitures disponibles");
        baffichertoutesvoitures.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baffichertoutesvoituresActionPerformed(evt);
            }
        });

        jLabel4.setText("Prix Max/jour");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "immatriculation", "marque", "modele", "annee", "etat", "disponibilité", "prix_jour", "carburant", "transmission", "Action"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTable1ComponentAdded(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel7.setText("© 2025 Location de Voitures - Tous droits réservés");

        bexit.setText("Exit");
        bexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bexitActionPerformed(evt);
            }
        });

        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });
        jSpinner1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jSpinner1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(brechercher)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(baffichertoutesvoitures, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bexit)
                .addGap(38, 38, 38))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(baffichertoutesvoitures)
                    .addComponent(brechercher))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(bexit))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Réserver une voiture", jPanel3);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID penalite", "ID location", "mode paiement", "etat paiement", "montant calcule", "Action"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable3.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTable3ComponentAdded(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        raffraichirPenalite.setText("raffraichir");
        raffraichirPenalite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                raffraichirPenaliteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(raffraichirPenalite)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(raffraichirPenalite)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(329, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Mes pénalités", jPanel4);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Immatriculation", "Marque", "Modèle", "Prix jour ", "Carburant", "Date début", "Date fin", "Date retour", "Statut"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTable2ComponentAdded(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(6).setHeaderValue("Date début");
            jTable2.getColumnModel().getColumn(7).setHeaderValue("Date fin");
            jTable2.getColumnModel().getColumn(8).setHeaderValue("Date retour");
            jTable2.getColumnModel().getColumn(9).setResizable(false);
            jTable2.getColumnModel().getColumn(9).setHeaderValue("Statut");
        }

        jButton1.setText("rafraîchir");
        jButton1.setActionCommand("rafraichir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 17, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jButton1)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(333, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Mes réservations", jPanel5);

        jLabel6.setText("Nom ");

        jLabel9.setText("Prénom");

        jLabel10.setText("Email ");

        jLabel11.setText("Télephone");

        jLabel12.setText("Adresse");

        jLabel13.setText("Ancien mot de passe");

        jLabel14.setText("Nouveau mot de passe");

        jLabel15.setText("Confirmer mot de passe");

        txtAncienMotDePasse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAncienMotDePasseActionPerformed(evt);
            }
        });

        jinforma.setText("Mettre à jour mes informations");
        jinforma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jinformaActionPerformed(evt);
            }
        });

        jmotdepasse.setText("Mettre à jour mot de passe");
        jmotdepasse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmotdepasseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(124, 124, 124)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAdress, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAncienMotDePasse, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtConfirmerMotDePasse, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNouveauMotDePasse, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 251, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jinforma)
                    .addComponent(jmotdepasse))
                .addGap(174, 174, 174))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(txtPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtAdress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jinforma)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 228, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtAncienMotDePasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtNouveauMotDePasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConfirmerMotDePasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jmotdepasse))
        );

        jTabbedPane1.addTab("Mon compte", jPanel6);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(bretour)
                .addGap(18, 18, 18)
                .addComponent(bDeconnexion)
                .addGap(44, 44, 44))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 753, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bDeconnexion)
                            .addComponent(bretour)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel5))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bDeconnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeconnexionActionPerformed
        // TODO add your handling code here:
        new loginframe().setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_bDeconnexionActionPerformed
    // TODO add your handling code here:
    // TODO add your handling code here:


    private void bretourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bretourActionPerformed
        // TODO add your handling code here:
        new HomeFrame().setVisible(true);
        this.dispose();
    
    }//GEN-LAST:event_bretourActionPerformed

       private void jSpinner1StateChanged2(java.awt.event.KeyEvent evt) {                                       
        // TODO add your handling code here:
         float prixMax = ((Number) jSpinner1.getValue()).floatValue();

    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0); // Vider le tableau

    List<Voiture> voitures;
    if (prixMax > 0) {
        voitures = voitureDAO.trouverParPrixMax(prixMax);
    } else {
        voitures = voitureDAO.listerDisponibles(); // Pas de filtre
    }

    for (Voiture v : voitures) {
    String action = v.getDisponibilite().equalsIgnoreCase("Disponible") ? "Réserver" : null;

    model.addRow(new Object[]{
        v.getImmatriculation(),
        v.getMarque(),
        v.getModele(),
        v.getAnnee(),
        v.getEtat(),
        v.getDisponibilite(),
        v.getPrixJour() + " Dinars",
        v.getCarburant(),
        v.getTransmission(),
        action  // 10ème colonne : bouton ou rien
    });
}

    }                                      

    private void jTable2ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTable2ComponentAdded
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTable2ComponentAdded

    private void jinformaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jinformaActionPerformed
        // TODO add your handling code here:
     // Récupération des champs
String nom = txtNom.getText();
String prenom = txtPrenom.getText();
String email = txtEmail.getText();
String telephone = txtTel.getText();
String adresse = txtAdress.getText();

// Récupère le CIN du client connecté (à adapter selon ta logique de session)
int cin = user.getCin(); // <-- tu dois l’avoir stocké après login

// Vérifie que tous les champs sont remplis
if (adresse.isEmpty() || nom.isEmpty() || prenom.isEmpty() || email.isEmpty() || telephone.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Veuillez remplir tous les champs !");
    return;
}

try {
    // Connexion à la base
    Class.forName("oracle.jdbc.driver.OracleDriver");
    Connection conn = DatabaseConnection.getConnection();

    // Requête de mise à jour pour UTILISATEUR
    String sql1 = "UPDATE Utilisateur SET nom = ?, prenom = ?, email = ?, tel = ? WHERE cin = ?";
    PreparedStatement ps1 = conn.prepareStatement(sql1);
    ps1.setString(1, nom);
    ps1.setString(2, prenom);
    ps1.setString(3, email);
    ps1.setString(4, telephone);
    ps1.setInt(5, cin); // WHERE cin = ?

    // Requête de mise à jour pour CLIENT
    String sql2 = "UPDATE Client SET adresse = ? WHERE cin = ?";
    PreparedStatement ps2 = conn.prepareStatement(sql2);
    ps2.setString(1, adresse);
    ps2.setInt(2, cin); // WHERE cin = ?

    // Exécution des deux mises à jour
    int lignes1 = ps1.executeUpdate();
    int lignes2 = ps2.executeUpdate();

    if (lignes1 > 0 && lignes2 > 0) {
        JOptionPane.showMessageDialog(this, "Informations mises à jour avec succès !");
    } else {
        JOptionPane.showMessageDialog(this, "Aucune correspondance trouvée pour ce CIN.");
    }

    // Fermeture
    ps1.close();
    ps2.close();
    conn.close();


} catch (Exception ex) {
    ex.printStackTrace();
    JOptionPane.showMessageDialog(this, "Erreur lors de la mise à jour : " + ex.getMessage());
}
        
    }//GEN-LAST:event_jinformaActionPerformed

    private void txtAncienMotDePasseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAncienMotDePasseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAncienMotDePasseActionPerformed

    private void jmotdepasseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmotdepasseActionPerformed
        // TODO add your handling code here:
        String ancienMdp = txtAncienMotDePasse.getText();
        String nouveauMdp = txtNouveauMotDePasse.getText();
        String confirmerMdp = txtConfirmerMotDePasse.getText();
        int cin = user.getCin(); // récupère le CIN de l'utilisateur connecté

// Vérification des champs
if (ancienMdp.isEmpty() || nouveauMdp.isEmpty() || confirmerMdp.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Veuillez remplir tous les champs !");
    return;
}

// Vérification si le nouveau est différent de l'ancien
if (ancienMdp.equals(nouveauMdp)) {
    JOptionPane.showMessageDialog(this, "Le nouveau mot de passe doit être différent de l'ancien !");
    return;
}

// Vérifie si confirmation correspond
if (!nouveauMdp.equals(confirmerMdp)) {
    JOptionPane.showMessageDialog(this, "La confirmation du mot de passe ne correspond pas !");
    return;
}

try {
    Class.forName("oracle.jdbc.driver.OracleDriver");
    Connection conn = DatabaseConnection.getConnection();

    // Vérifie que l’ancien mot de passe est correct
    String sqlCheck = "SELECT * FROM utilisateur WHERE cin = ? AND mot_de_passe = ?";
    PreparedStatement psCheck = conn.prepareStatement(sqlCheck);
    psCheck.setInt(1, cin);
    psCheck.setString(2, ancienMdp);

    ResultSet rs = psCheck.executeQuery();
    if (!rs.next()) {
        JOptionPane.showMessageDialog(this, "Ancien mot de passe incorrect !");
        return;
    }

    // Mise à jour du mot de passe
    String sqlUpdate = "UPDATE utilisateur SET mot_de_passe = ? WHERE cin = ?";
    PreparedStatement psUpdate = conn.prepareStatement(sqlUpdate);
    psUpdate.setString(1, nouveauMdp);
    psUpdate.setInt(2, cin);

    int lignes = psUpdate.executeUpdate();
    if (lignes > 0) {
        JOptionPane.showMessageDialog(this, "Mot de passe mis à jour avec succès !");
    } else {
        JOptionPane.showMessageDialog(this, "Échec de la mise à jour !");
    }

    // Fermeture
    rs.close();
    psCheck.close();
    psUpdate.close();
    conn.close();

} catch (Exception e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Erreur : " + e.getMessage());
}
    }//GEN-LAST:event_jmotdepasseActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
               open("Réserver une voiture");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jSpinner1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSpinner1KeyReleased
        // TODO add your handling code here:
        jSpinner1StateChanged2(evt);
    }//GEN-LAST:event_jSpinner1KeyReleased

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        // TODO add your handling code here:
        float prixMax = ((Number) jSpinner1.getValue()).floatValue();

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Vider le tableau

        List<Voiture> voitures;
        if (prixMax > 0) {
            voitures = voitureDAO.trouverParPrixMax(prixMax);
        } else {
            voitures = voitureDAO.listerDisponibles(); // Pas de filtre
        }

        for (Voiture v : voitures) {
            String action = v.getDisponibilite().equalsIgnoreCase("Disponible") ? "Réserver" : null;

            model.addRow(new Object[]{
                v.getImmatriculation(),
                v.getMarque(),
                v.getModele(),
                v.getAnnee(),
                v.getEtat(),
                v.getDisponibilite(),
                v.getPrixJour() + " Dinars",
                v.getCarburant(),
                v.getTransmission(),
                action  // 10ème colonne : bouton ou rien
            });
        }
    }//GEN-LAST:event_jSpinner1StateChanged

    private void bexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bexitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_bexitActionPerformed

    private void jTable1ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTable1ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1ComponentAdded

    private void baffichertoutesvoituresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baffichertoutesvoituresActionPerformed
        // TODO add your handling code here:
        // Récupérer le modèle du tableau (par exemple jTable1)
        // Récupérer le modèle du tableau (jTable1)
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Vider le tableau

        VoitureDAO voitureDAO = new VoitureDAO();

        // Utiliser listerTout() pour récupérer toutes les voitures
        List<Voiture> Voituresdisponible = voitureDAO.listerDisponibles();

        // Ajouter chaque voiture dans le tableau
        for (Voiture v : Voituresdisponible) {
            String action = v.getDisponibilite().equalsIgnoreCase("Disponible") ? "Réserver" : null;

            model.addRow(new Object[]{
                v.getImmatriculation(),
                v.getMarque(),
                v.getModele(),
                v.getAnnee(),
                v.getEtat(),
                v.getDisponibilite(),
                v.getPrixJour() + " Dinars",
                v.getCarburant(),
                v.getTransmission(),
                action  // 10ème colonne : bouton ou rien
            });
        }

    }//GEN-LAST:event_baffichertoutesvoituresActionPerformed

    private void brechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brechercherActionPerformed
        // TODO add your handling code here:
        // Récupérer le texte de recherche et le prix maximum
        // Récupérer le texte de recherche et le prix maximum
        // Récupérer le texte de recherche et le prix maximum
        String recherche = jTextField1.getText().trim().toLowerCase();
        float prixMax = ((Number) jSpinner1.getValue()).floatValue();

        // Récupération de toutes les voitures disponibles
        List<Voiture> toutesLesVoitures = voitureDAO.listerDisponibles();
        List<Voiture> resultats = new ArrayList<>();

        for (Voiture v : toutesLesVoitures) {
            boolean correspondTexte = true;
            boolean correspondPrix = true;

            // Vérification du texte (marque ou modèle)
            if (!recherche.isEmpty()) {
                correspondTexte = v.getMarque().toLowerCase().contains(recherche)
                || v.getModele().toLowerCase().contains(recherche);
            }

            // Vérification du prix
            if (prixMax > 0) {
                correspondPrix = v.getPrixJour() <= prixMax;
            }

            // Si au moins un des critères est rempli
            if (correspondTexte && correspondPrix) {
                resultats.add(v);
            }
        }

        // Mettre à jour le tableau
        DefaultTableModel modele = (DefaultTableModel) jTable1.getModel();
        modele.setRowCount(0); // Vider le tableau

        if (resultats.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Aucune voiture ne correspond à vos critères.");
        } else {
            for (Voiture v : resultats) {
                String action = v.getDisponibilite().equalsIgnoreCase("Disponible") ? "Réserver" : null;

                modele.addRow(new Object[]{
                    v.getImmatriculation(),
                    v.getMarque(),
                    v.getModele(),
                    v.getAnnee(),
                    v.getEtat(),
                    v.getDisponibilite(),
                    v.getPrixJour() + " Dinars",
                    v.getCarburant(),
                    v.getTransmission(),
                    action  // 10ème colonne : bouton ou rien
                });
            }

        }

        // Réinitialiser les champs
        //jTextField1.setText("");
        //jSpinner1.setValue(0);
    }//GEN-LAST:event_brechercherActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        open("Mes Réservations");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
           // TODO add your handling code here:
        open("Mes pénalités");
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        open("Mon compte");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        rafraichir(this.user);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable3ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTable3ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable3ComponentAdded

    private void raffraichirPenaliteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_raffraichirPenaliteActionPerformed
chargerPenalite();
        // TODO add your handling code here:
    }//GEN-LAST:event_raffraichirPenaliteActionPerformed

    private void open(String titleo){
        
         
         int it = -1;
                for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
                    String title = jTabbedPane1.getTitleAt(i);
                    if(titleo == null ? title == null : titleo.equals(title)) {
                        it = i;
                        break;
                    } 
                    Component content = jTabbedPane1.getComponentAt(i);
                    System.out.println("Onglet " + i + " : " + title + " → " + content.getClass().getSimpleName());
                }
                if(it == -1){
                   if(titleo.equals("Réserver une voiture")){
    jTabbedPane1.addTab("Réserver une voiture", jPanel3);
    it = jTabbedPane1.getTabCount()  -1;
}
if(titleo.equals("Mes Réservations")){
    jTabbedPane1.addTab("Mes Réservations", jPanel5);
    it = jTabbedPane1.getTabCount()  -1;
}
if(titleo.equals("Mes pénalités")){
    jTabbedPane1.addTab("Mes pénalités", jPanel4);
    it = jTabbedPane1.getTabCount()  -1;
    chargerPenalite();
}
if(titleo.equals("Mon compte")){
    jTabbedPane1.addTab("Mon compte", jPanel6);
    it = jTabbedPane1.getTabCount()  -1;
     chargerInformationsUtilisateur(); 
}

                }
                jTabbedPane1.setSelectedIndex(it); 

               
                
    }
    
    
    private void chargerPenalite(){
    
    // table 1
    var table3 = new GTable(jTable3);
    
    this.penaliteDAO = new PenaliteDAO();

    // Créer un modèle basé sur les colonnes attendues
    String[] colonnes = {"ID penalite", "ID location", "mode paiement", "etat paiement", "montant calcule", "Action"};
    model = new DefaultTableModel(colonnes, 0) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return column == colonnes.length - 1; // Seule la colonne "Action" est éditable
        }
    };

    // Lier le modèle à la table jTable1
    jTable3.setModel(model);
    jTable3.setRowHeight(30);
   
   jTable3.getColumnModel().getColumn(colonnes.length - 1).setCellRenderer(new ButtonRendererPenalite());
jTable3.getColumnModel().getColumn(colonnes.length - 1).setCellEditor(new ButtonEditorPenalite(new JCheckBox(), jTable3, this));

    // Charger les données
        model.setRowCount(0); // Vider la table

        
        //"ID penalite", "ID location", "mode paiement", "etat paiement", "montant calcule", "Action"
        
      
        
    List<Penalite> penalites = penaliteDAO.listerPenalitesParClient(user.getCin());
   for (Penalite v : penalites) {
    String action = v.getEtatPaiement().equalsIgnoreCase("en_attente") ? "Payer" : null;
//

    var m = new business().getMontantPenalite(v);
    model.addRow(new Object[]{
       
        v.getIdPenalite(),
        v.getIdLocation(),
        v.getModePaiement(),
        v.getEtatPaiement(),
        m,
        action  // 10ème colonne : bouton ou rien
    });
}
}


    
    private void  rafraichir(Utilisateur user){
        this.user = user;
    
    // table 1
    var table1 = new GTable(jTable1);
    
    this.voitureDAO = new VoitureDAO();
    this.locationDAO = new LocationDAO();
    this.ReservationDAO =new ReservationDAO();

    // Créer un modèle basé sur les colonnes attendues
    String[] colonnes = {"Immatriculation", "Marque", "Modèle", "Année", "état","Disponibilité","Prix/Jour", "Carburant", "Transmission", "Action"};
    model = new DefaultTableModel(colonnes, 0) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return column == 9; // Seule la colonne "Action" est éditable
        }
    };

    // Lier le modèle à la table jTable1
    jTable1.setModel(model);
    jTable1.setRowHeight(30);
   
   jTable1.getColumnModel().getColumn(9).setCellRenderer(new ButtonRenderer());
jTable1.getColumnModel().getColumn(9).setCellEditor(new ButtonEditor(new JCheckBox(), jTable1, this));

    // Charger les données
    chargerVoituresDisponibles();
    
    // table 2
    var table2 = new GTable(jTable2);
    
    this.voitureDAO = new VoitureDAO();

    // Créer un modèle basé sur les colonnes attendues
    String[] colonnes2 = { "ID", "Immatriculation", "Marque", "Modèle", "Prix jour ", "Carburant", "Date début", "Date fin", "Date retour", "Statut"};
    model2 = new DefaultTableModel(colonnes2, 0) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return column == colonnes2.length-1; // Seule la colonne "Action" est éditable
        }
    };

    // Lier le modèle à la table jTable2
    jTable2.setModel(model2);
    jTable2.setRowHeight(30);
   
   //jTable2.getColumnModel().getColumn(colonnes2.length-1).setCellRenderer(new ButtonRenderer2());
//jTable2.getColumnModel().getColumn(colonnes2.length-1).setCellEditor(new ButtonEditor2(new JCheckBox(), jTable2));
       chargerVoituresReserves(user);
    
    }
    
    
    
    
  
    
    private void bregisterActionPerformed(java.awt.event.ActionEvent evt) {
        // Ouvrir la fenêtre d'inscription
        RegisterFrame registerFrame = new RegisterFrame();
        registerFrame.setVisible(true);
        this.setVisible(false);
    }
    
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientDashboard2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientDashboard2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientDashboard2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientDashboard2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                var user = new UtilisateurDAO();
                new ClientDashboard2(user.trouverParCIN(12345678)).setVisible(true);
            }
        });
        
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bDeconnexion;
    private javax.swing.JButton baffichertoutesvoitures;
    private javax.swing.JButton bexit;
    private javax.swing.JButton brechercher;
    private javax.swing.JButton bretour;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton jinforma;
    private javax.swing.JButton jmotdepasse;
    private javax.swing.JButton raffraichirPenalite;
    private javax.swing.JTextField txtAdress;
    private javax.swing.JTextField txtAncienMotDePasse;
    private javax.swing.JTextField txtConfirmerMotDePasse;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNom;
    private javax.swing.JTextField txtNouveauMotDePasse;
    private javax.swing.JTextField txtPrenom;
    private javax.swing.JTextField txtTel;
    // End of variables declaration//GEN-END:variables

    void update() {
this.chargerVoituresDisponibles();
this.chargerVoituresReserves(user);
    }
private void chargerInformationsUtilisateur() {
    if (user != null) {
        System.out.println("Chargement des informations de l'utilisateur : ");
        System.out.println("Nom : " + user.getNom());
        System.out.println("Prénom : " + user.getPrenom());
        System.out.println("Email : " + user.getEmail());
        System.out.println("Téléphone : " + user.getTel());

        // Remplir les champs de texte avec les informations de l'utilisateur
        txtNom.setText(user.getNom());
        txtPrenom.setText(user.getPrenom());
        txtEmail.setText(user.getEmail());
        txtTel.setText(String.valueOf(user.getTel()));
    } else {
        System.out.println("Erreur : l'objet 'user' est nul");
        JOptionPane.showMessageDialog(this, "Aucun utilisateur trouvé.");
        return;
    }

    // Récupérer les informations du client
    try {
        Client client = ClientDAO.trouverParnid(user.getCin());
        if (client != null) {
            System.out.println("Adresse du client : " + client.getAdresse());
            txtAdress.setText(client.getAdresse());
        } else {
            System.out.println("Aucun client trouvé avec CIN : " + user.getCin());
            JOptionPane.showMessageDialog(this, "Aucun client trouvé avec ce CIN.");
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erreur lors de la récupération des informations du client.");
    }
}

    public void payePenalite(String id) {
        var p = this.penaliteDAO.trouverParId(Integer.parseInt(id));
        p.setEtatPaiement("effectue");
        this.penaliteDAO.mettreAJour(p);
        this.chargerPenalite();    
    }

class ButtonRenderer extends JButton implements TableCellRenderer {

    public ButtonRenderer() {
        setOpaque(true);
    }

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value,
        boolean isSelected, boolean hasFocus, int row, int column) {
        
        if (value != null && "Réserver".equals(value.toString())) {
            setText("Réserver");
            return this;
        } else {
            return new JLabel(); // pas de bouton si cellule vide
        }
    }
    
}

class ButtonEditor extends DefaultCellEditor {
    private JButton button;
    private JTable table;
    private String immatriculation;
    ClientDashboard2 d2;

    public ButtonEditor(JCheckBox checkBox, JTable table, ClientDashboard2 d2) {
        super(checkBox);
        this.table = table;
        this.d2 = d2;

        button = new JButton("Réserver");
        button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                fireEditingStopped(); // <-- très important !

                int selectedRow = table.getSelectedRow();
                if (selectedRow != -1) {
                    String dispo = table.getValueAt(selectedRow, 5).toString();
                    if ("Disponible".equalsIgnoreCase(dispo)) {
                        System.out.println("La voiture est disponible");
                        String immatriculation = table.getValueAt(selectedRow, 0).toString();

                        
                        // Afficher le formulaire de réservation
                        new ReservationFrame(immatriculation, d2.user.getCin(),  d2).setVisible(true);
                    } else {
                        System.out.println("Voiture NON disponible : " + dispo);
                        JOptionPane.showMessageDialog(null, "Cette voiture n'est pas disponible.");
                    }
                }
            }
        });
    }

    @Override
    public Component getTableCellEditorComponent(JTable table, Object value,
        boolean isSelected, int row, int column) {
        
        if (value != null && "Réserver".equals(value.toString())) {
            button.setText("Réserver");
        }
        return button;
    }
}
  
 
class ButtonRendererPenalite extends JButton implements TableCellRenderer {

    public ButtonRendererPenalite() {
        setOpaque(true);
    }

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value,
        boolean isSelected, boolean hasFocus, int row, int column) {
        
        if (value != null && "Payer".equals(value.toString())) {
            setText("Payer");
            return this;
        } else {
            return new JLabel(); // pas de bouton si cellule vide
        }
    }
    
}

class ButtonEditorPenalite extends DefaultCellEditor {
    private JButton button;
    private JTable table;
    private String immatriculation;
    ClientDashboard2 d2;

    public ButtonEditorPenalite(JCheckBox checkBox, JTable table, ClientDashboard2 d2) {
        super(checkBox);
        this.table = table;
        this.d2 = d2;

        button = new JButton("Payer");
        button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                fireEditingStopped(); // <-- très important !

                int selectedRow = table.getSelectedRow();
                if (selectedRow != -1) {
                    String dispo = table.getValueAt(selectedRow, 3).toString();
                    if ("en_attente".equalsIgnoreCase(dispo)) {
                        System.out.println("Le payement est en attente");
                        String id = table.getValueAt(selectedRow, 0).toString();

                        
                        d2.payePenalite(id);
                        
                    } else {
                        System.out.println("Voiture payée : " + dispo);
                        JOptionPane.showMessageDialog(null, "Cette voiture est payée.");
                    }
                }
            }
        });
    }

    @Override
    public Component getTableCellEditorComponent(JTable table, Object value,
        boolean isSelected, int row, int column) {
        
        if (value != null && "Payer".equals(value.toString())) {
            button.setText("Payer");
        }
        return button;
    }
}
  
 

}


